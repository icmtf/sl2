services:
  streamlit:
    build:
      context: ./streamlit
      args:
        REGISTRY: ${REGISTRY:-}
    expose:
      - "8501"
    environment:
      - FASTAPI_URL=http://fastapi:8000
      - REDIS_URL=redis://redis:6379
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
    depends_on:
      - fastapi
      - redis
      - jaeger
    networks:
      - sl_network

  fastapi:
    build:
      context: ./fastapi
      args:
        REGISTRY: ${REGISTRY:-}
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
    depends_on:
      - redis
      - jaeger
    networks:
      - sl_network

  redis:
    image: ${REGISTRY:-}redis:6
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - sl_network

  s3_worker:
    build:
      context: ./python_workers
      dockerfile: s3_worker/Dockerfile
      args:
        REGISTRY: ${REGISTRY:-}
    environment:
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_BUCKET=${S3_BUCKET}
      - S3_KEY=${S3_KEY}
      - S3_SECRET=${S3_SECRET}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
    depends_on:
      - redis
      - jaeger
    networks:
      - sl_network

  easynet_worker:
    build:
      context: ./python_workers
      dockerfile: easynet_worker/Dockerfile
      args:
        REGISTRY: ${REGISTRY:-}
    environment:
      - REDIS_URL=redis://redis:6379
      # - ENVIRONMENT=${ENVIRONMENT:-local}
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
    depends_on:
      - redis
      - jaeger
    networks:
      - sl_network

  jaeger:
    image: ${REGISTRY:-}jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # Jaeger UI
      - "6831:6831/udp"  # Jaeger agent
    networks:
      - sl_network

  nginx_reverse_proxy:
    build:
      context: ./nginx_reverse_proxy
      args:
        REGISTRY: ${REGISTRY:-}
    ports:
      - "8501:80"
    volumes:
      - ./docs:/usr/share/nginx/html:ro
    depends_on:
      - mkdocs
      - streamlit
    networks:
      - sl_network

  mkdocs:
    build:
      context: ./mkdocs
      args:
        REGISTRY: ${REGISTRY:-}
    volumes:
      - ./mkdocs:/docs
      - ./docs:/output
    networks:
      - sl_network
  
networks:
  sl_network:
    external: true
